import(nnls)
exportPattern("^[^\\.]")

importFrom(stats, coef)
importFrom(stats, predict)
importFrom(graphics, plot)

importFrom("stats", "as.formula", "binomial", "cor.test", "dlogis", "formula", "gaussian", "glm", "lm", "loess", "loess.control", "model.matrix", "optim", "plogis", "predict.lm", "qnorm", "reorder", "sd", "step", "var", "weighted.mean")
importFrom("utils", "RShowDoc")
import("xgboost")

S3method(print, SuperLearner)
S3method(coef, SuperLearner)
S3method(predict, SuperLearner)

S3method(print, CV.SuperLearner)
S3method(coef, CV.SuperLearner)
S3method(plot, CV.SuperLearner)
S3method(summary, CV.SuperLearner)
S3method(print, summary.CV.SuperLearner)

S3method(predict, SL.bayesglm)
S3method(predict, SL.caret)
S3method(predict, SL.cforest)
S3method(predict, SL.earth)
S3method(predict, SL.gam)
S3method(predict, SL.gbm)
S3method(predict, SL.glm)
S3method(predict, SL.glmnet)
S3method(predict, SL.ipredbagg)
S3method(predict, SL.knn)
S3method(predict, SL.leekasso)
S3method(predict, SL.loess)
S3method(predict, SL.logreg)
S3method(predict, SL.mean)
S3method(predict, SL.nnet)
S3method(predict, SL.nnls)
S3method(predict, SL.polymars)
S3method(predict, SL.randomForest)
S3method(predict, SL.ridge)
S3method(predict, SL.rpart)
S3method(predict, SL.step)
S3method(predict, SL.stepAIC)
S3method(predict, SL.svm)
S3method(predict, SL.template)
S3method(predict, SL.xgboost)
S3method(predict, SuperLearner)
